{
	"variables": [],
	"info": {
		"name": "Real Flashcard Endpoint",
		"_postman_id": "1b5b69f0-611d-020e-7105-36eea0d580cb",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/decks/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"let referenceJson = \r",
							"    [\r",
							"  {\r",
							"    \"id\": 1,\r",
							"    \"numProblems\": 10,\r",
							"    \"name\": \"easy all operator\",\r",
							"    \"description\": \"test deck for frontend\",\r",
							"    \"created\": \"2017-01-25T20:17:45.000Z\",\r",
							"    \"changed\": \"2017-01-25T20:17:45.000Z\",\r",
							"    \"userName\": \"asa\",\r",
							"    \"userId\": 1,\r",
							"    \"isPrivate\": true,\r",
							"    \"flashcard\": [\r",
							"      {\r",
							"        \"id\": 1,\r",
							"        \"problem\": \"1 + 2\",\r",
							"        \"answer\": \"3\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 2,\r",
							"        \"problem\": \"2 - 1\",\r",
							"        \"answer\": \"1\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 3,\r",
							"        \"problem\": \"4 / 2\",\r",
							"        \"answer\": \"2\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 4,\r",
							"        \"problem\": \"2 * 3\",\r",
							"        \"answer\": \"6\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 5,\r",
							"        \"problem\": \"4 + 6\",\r",
							"        \"answer\": \"10\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 6,\r",
							"        \"problem\": \"10 - 4\",\r",
							"        \"answer\": \"6\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 7,\r",
							"        \"problem\": \"3 / 1\",\r",
							"        \"answer\": \"3\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 8,\r",
							"        \"problem\": \"2 * 0\",\r",
							"        \"answer\": \"0\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 9,\r",
							"        \"problem\": \"0 + 5\",\r",
							"        \"answer\": \"5\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 10,\r",
							"        \"problem\": \"8 - 6\",\r",
							"        \"answer\": \"2\"\r",
							"      }\r",
							"    ]\r",
							"  }\r",
							"];\r",
							"\r",
							"function foundCorrectObj(responseJson, referenceJson) {\r",
							"    return JSON.stringify(responseJson) === JSON.stringify(referenceJson); \r",
							"}\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Returns correct object from DB\"] = foundCorrectObj(responseJson, referenceJson);\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/decks/1",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "petId",
							"value": "1",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/decks",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"let referenceJson = \r",
							"    [\r",
							"  {\r",
							"    \"id\": 1,\r",
							"    \"numProblems\": 10,\r",
							"    \"name\": \"easy all operator\",\r",
							"    \"description\": \"test deck for frontend\",\r",
							"    \"created\": \"2017-01-25T20:17:45.000Z\",\r",
							"    \"changed\": \"2017-01-25T20:17:45.000Z\",\r",
							"    \"userName\": \"asa\",\r",
							"    \"userId\": 1,\r",
							"    \"isPrivate\": true,\r",
							"    \"flashcard\": [\r",
							"      {\r",
							"        \"id\": 1,\r",
							"        \"problem\": \"1 + 2\",\r",
							"        \"answer\": \"3\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 2,\r",
							"        \"problem\": \"2 - 1\",\r",
							"        \"answer\": \"1\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 3,\r",
							"        \"problem\": \"4 / 2\",\r",
							"        \"answer\": \"2\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 4,\r",
							"        \"problem\": \"2 * 3\",\r",
							"        \"answer\": \"6\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 5,\r",
							"        \"problem\": \"4 + 6\",\r",
							"        \"answer\": \"10\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 6,\r",
							"        \"problem\": \"10 - 4\",\r",
							"        \"answer\": \"6\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 7,\r",
							"        \"problem\": \"3 / 1\",\r",
							"        \"answer\": \"3\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 8,\r",
							"        \"problem\": \"2 * 0\",\r",
							"        \"answer\": \"0\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 9,\r",
							"        \"problem\": \"0 + 5\",\r",
							"        \"answer\": \"5\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 10,\r",
							"        \"problem\": \"8 - 6\",\r",
							"        \"answer\": \"2\"\r",
							"      }\r",
							"    ]\r",
							"  },\r",
							"  {\r",
							"    \"id\": 2,\r",
							"    \"numProblems\": 5,\r",
							"    \"name\": \"easy all operator v2\",\r",
							"    \"description\": \"test deck for frontend\",\r",
							"    \"created\": \"2017-02-09T20:17:45.000Z\",\r",
							"    \"changed\": \"2017-02-09T20:17:45.000Z\",\r",
							"    \"userName\": \"asa\",\r",
							"    \"userId\": 1,\r",
							"    \"isPrivate\": true,\r",
							"    \"flashcard\": [\r",
							"      {\r",
							"        \"id\": 11,\r",
							"        \"problem\": \"1 + 1\",\r",
							"        \"answer\": \"2\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 12,\r",
							"        \"problem\": \"3 - 1\",\r",
							"        \"answer\": \"2\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 13,\r",
							"        \"problem\": \"9 / 3\",\r",
							"        \"answer\": \"3\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 14,\r",
							"        \"problem\": \"2 * 5\",\r",
							"        \"answer\": \"10\"\r",
							"      },\r",
							"      {\r",
							"        \"id\": 15,\r",
							"        \"problem\": \"5 - 3\",\r",
							"        \"answer\": \"2\"\r",
							"      }\r",
							"    ]\r",
							"  }\r",
							"];\r",
							"  \r",
							"function foundCorrectObj(responseJson, referenceJson) {\r",
							"    return JSON.stringify(responseJson) === JSON.stringify(referenceJson); \r",
							"}\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Returns correct object from DB\"] = foundCorrectObj(responseJson, referenceJson);\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/decks",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "asa",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "asa",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/generate-cards ",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 1000;\r",
							"\r",
							"tests[\"Response has deck id or flashcard id\"] = responseBody.has(\"id\");\r",
							"tests[\"Response has number of problems\"] = responseBody.has(\"numProblems\");\r",
							"tests[\"Response has deck name\"] = responseBody.has(\"name\");\r",
							"tests[\"Response has deck description\"] = responseBody.has(\"description\");\r",
							"tests[\"Response has created time\"] = responseBody.has(\"created\");\r",
							"tests[\"Response has changed time\"] = responseBody.has(\"changed\");\r",
							"tests[\"Response has user name\"] = responseBody.has(\"userName\");\r",
							"tests[\"Response has user id\"] = responseBody.has(\"userId\");\r",
							"tests[\"Response has privacy control\"] = responseBody.has(\"isPrivate\");\r",
							"tests[\"Response has flashcard\"] = responseBody.has(\"flashcard\");\r",
							"tests[\"Response has at least 1 answer\"] = responseBody.has(\"answer\");\r",
							"tests[\"Response has at least 1 problem\"] = responseBody.has(\"problem\");\r",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/generate-cards ",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"min\": 10,\r\n\"max\": 10,\r\n\"numberSolution\": 10,\r\n\"operators\": [{\r\n\"minus\": false,\r\n\"add\": false,\r\n\"div\": false,\r\n\"multi\": true\r\n}]\r\n\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"let referenceJson = \r",
							"    [\r",
							"  {\r",
							"    \"id\": 1,\r",
							"    \"username\": \"foo\",\r",
							"    \"auth_level\": \"teacher\",\r",
							"    \"auth_id\": 1\r",
							"  },\r",
							"  {\r",
							"    \"id\": 2,\r",
							"    \"username\": \"miaTeacher\",\r",
							"    \"auth_level\": \"teacher\",\r",
							"    \"auth_id\": 1\r",
							"  },\r",
							"  {\r",
							"    \"id\": 3,\r",
							"    \"username\": \"su\",\r",
							"    \"auth_level\": \"admin\",\r",
							"    \"auth_id\": 2\r",
							"  },\r",
							"  {\r",
							"    \"id\": 4,\r",
							"    \"username\": \"admin\",\r",
							"    \"auth_level\": \"admin\",\r",
							"    \"auth_id\": 2\r",
							"  },\r",
							"  {\r",
							"    \"id\": 5,\r",
							"    \"username\": \"philip\",\r",
							"    \"auth_level\": \"student\",\r",
							"    \"auth_id\": 0\r",
							"  },\r",
							"  {\r",
							"    \"id\": 6,\r",
							"    \"username\": \"john\",\r",
							"    \"auth_level\": \"student\",\r",
							"    \"auth_id\": 0\r",
							"  },\r",
							"  {\r",
							"    \"id\": 7,\r",
							"    \"username\": \"asa\",\r",
							"    \"auth_level\": \"student\",\r",
							"    \"auth_id\": 0\r",
							"  }\r",
							"];\r",
							"  \r",
							"function foundCorrectObj(responseJson, referenceJson) {\r",
							"    return JSON.stringify(responseJson) === JSON.stringify(referenceJson); \r",
							"}\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Returns correct object from DB\"] = foundCorrectObj(responseJson, referenceJson);\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "asa",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "asa",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"let referenceJson = \r",
							"    {\r",
							"  \"id\": 1,\r",
							"  \"username\": \"foo\",\r",
							"  \"auth_level\": \"teacher\",\r",
							"  \"auth_id\": 1\r",
							"};\r",
							"  \r",
							"function foundCorrectObj(responseJson, referenceJson) {\r",
							"    return JSON.stringify(responseJson) === JSON.stringify(referenceJson); \r",
							"}\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Returns correct object from DB\"] = foundCorrectObj(responseJson, referenceJson);\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/1",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "asa",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "asa",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"postman.setGlobalVariable(\"inserted_user_id\", jsonData.id);\r",
							"\r",
							"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"asa\",\n\t\"password\": \"123456\",\n\t\"auth_level\": 0\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var responseJson = JSON.parse(responseBody);\r",
							"\r",
							"let referenceJson = \r",
							"    {\r",
							"  \"username\": \"admin\",\r",
							"  \"auth_level\": \"admin\",\r",
							"  \"auth_id\": 2,\r",
							"  \"id\": 4\r",
							"};\r",
							"  \r",
							"function foundCorrectObj(responseJson, referenceJson) {\r",
							"    return JSON.stringify(responseJson) === JSON.stringify(referenceJson); \r",
							"}\r",
							"\r",
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Returns correct object from DB\"] = foundCorrectObj(responseJson, referenceJson);\r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/login",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"123456\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/{{inserted_user_id}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code; \r",
							"\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/{{inserted_user_id}}",
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"fooo\",\n\t\"password\": \"12345617\",\n\t\"auth_level\": \"2\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/{{inserted_user_id}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/{{inserted_user_id}}",
				"method": "DELETE",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "test insert new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"url": "http://snf-568573.vm.okeanos.grnet.gr:8080/api/v1/users/{{inserted_user_id}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}