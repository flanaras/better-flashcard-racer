swagger: "2.0"
info:
  description: "This is a Flashcard server.  You can find out more about Swagger at <a href=\"http://swagger.io\">http://swagger.io</a> or on irc.freenode.net, #swagger.  You can use the api key \"special-key\" to test the authorization filters"
  version: 1.0.0
  title: Swagger Flashcard YAML
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "asailona@gmail.com"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: /v1
tags:
  - name: decks
    description: All about decks data
#  - name: user
#    description: Access to Petstore orders
#    externalDocs:
#      description: Find out more about our store
#      url: "http://swagger.io"
schemes:
  - http
paths:
  /decks:
    get:
      tags:
        - deck
      summary: Find all decks available
      x-swagger-router-controller: DeckController
      description: Return all set of decks
      operationId: getDecks
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Deck"
      security:
        - api_key: []
  "/decks/{deckId}":
    get:
      tags:
        - deck
      summary: Find deck by ID
      x-swagger-router-controller: DeckController
      description: Returns a single set of deck
      operationId: getDeckById
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: deckId
          in: path
          description: ID of deck to return
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Deck"
        "400":
          description: Invalid ID supplied
        "404":
          description: Deck not found
      security:
        - api_key: []
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    post:
      tags:
        - deck
      summary: Updates a deck in the store with form data
      description: ""
      operationId: updateDeck
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: deckId
          in: path
          description: ID of deck that needs to be updated
          required: true
          type: string
        - name: numProblems
          in: formData
          description: number of problem in the deck 
          required: true
          type: integer
          format: int32
        - name: card
          in: formData
          description: collection of cards
          required: true
          type: array
          items:
            $ref: "#/definitions/Card"
      responses:
        "405":
          description: Invalid input
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    delete:
      tags:
        - deck
      summary: Deletes a deck
      description: ""
      operationId: deleteDeck
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          description: ""
          required: false
          type: string
        - name: deckId
          in: path
          description: Deck id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid deck value
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
#securityDefinitions:
#  petstore_auth:
#    type: oauth2
#    authorizationUrl: "http://petstore.swagger.io/api/oauth/dialog"
#    flow: implicit
#    scopes:
#      "write:pets": modify pets in your account
#      "read:pets": read your pets
#  api_key:
#    type: apiKey
#    name: api_key
#    in: header
definitions:
  Card:
    properties:
      id:
        type: integer
        format: int64
      problem:
        type: string
      answer:
        type: string
    xml:
      name: Card
  Deck:
    required:
      - numProblems
      - questionType
    properties:
      id:
        type: integer
        format: int64
      numProblems:
        type: integer
        format: int32
      flashcards:
        $ref: "#/definitions/Card"
    xml:
      name: Deck
  ApiResponse:
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
    xml:
      name: "##default"
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
